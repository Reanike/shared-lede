#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# Copyright (c) 2022 hugcabbage <fengsongtianxia@gmail.com>
#
# This is free software, licensed under the MIT License.
#
#<https://github.com/hugcabbage/shared-lede>
#
# 源码采用lean lede
#
name: 小米4A千兆版-lede
on:
  workflow_dispatch:
    inputs:
      build:
        description: '若要编译固件，请输入true'
        required: true
        default: 'true'
      release:
        description: '若要上传到release，请输入true'
        required: true
        default: 'true'
      release_title:
        description: '输入release标题'     
        required: true
        default: 'lede for xiaomi 4a gigabit'
      content_description:
        description: '输入版本描述'     
        required: true
        default: '版本：lean lede源码<br/>1.登陆IP 192.168.31.1，密码password<br/>2.升级内容：内核升级'
      artifact:
        description: '若要上传到artifact，请输入true'
        required: true
        default: 'false'
# 定时任务
# schedule:
#    - cron: 0 20 * * *
jobs:
  build_openwrt:
    name: 固件编译
    runs-on: ubuntu-latest
    if: github.event.inputs.build == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: 环境准备
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/apt/sources.list.d /usr/local/lib/android /opt/ghc
          sudo -E apt-get -y purge ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 zip unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: 脚本移动
        run: mv -f ./preset-models/* ./
      - name: 下载源码与插件
        run: |
          chmod +x 1clone.sh
          ./1clone.sh
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: 修改配置
        run: |
          chmod +x 1modify.sh
          ./1modify.sh
      - name: 生成.config文件
        run: |
          mv -f ./1.config.R4A ./.config
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: 编译
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: 获取当前日期
        run: |
          echo "tag_title=v2.$(TZ=Asia/Shanghai date +'%-m.%-d-%H%M%S')" >> $GITHUB_ENV
          echo "release_pre=v2.$(TZ=Asia/Shanghai date +'%-m.%-d')" >> $GITHUB_ENV
      - name: 整理固件目录
        run: |
          mkdir -p ./collected_firmware/packages
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./collected_firmware
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./collected_firmware/packages
          cd collected_firmware
          zip -r ./allfiles.zip ./*
          cd packages
          zip -r ../packages.zip ./*
      - name: 上传固件到release
        if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_FIRMWARE }}
          file: collected_firmware/*
          tag: ${{ env.tag_title }}
          release_name: "${{ env.release_pre }} ${{ github.event.inputs.release_title }}" 
          overwrite: true
          prerelease: false
          body: "小米4A千兆版lede固件<br/>${{ github.event.inputs.content_description }}"
          file_glob: true
      - name: 上传固件到artifact
        if: github.event.inputs.artifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: collected_firmware
          path: |
            collected_firmware/
            !collected_firmware/*.zip
